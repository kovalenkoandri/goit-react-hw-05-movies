{"version":3,"file":"static/js/194.abcd2ea5.chunk.js","mappings":"+KA+BA,UA5Ba,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eAChBC,EAAeF,GAAUC,GAAkB,GAC3CE,EAAcD,EAAaE,QAC/B,SAACC,EACDC,GADA,OACQJ,EAAaK,QAAQF,KAAQC,CADrC,IAGIE,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGN,EAAYO,OAAS,GACpBP,EAAYQ,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC5B,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMT,GAFjB,SAIGK,GAASC,KALLF,EASZ,OAIV,C,wHC5BYM,EAAQC,EAAAA,GAAAA,MAAH,6DAILC,EAASD,EAAAA,GAAAA,OAAH,4C,SCyCnB,EA1Ce,SAAC,GAAqD,IAAnDE,EAAkD,EAAlDA,SAAUrB,EAAwC,EAAxCA,OAAQsB,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC/C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,iCACE,6BACE,kBAAML,SAdS,SAAAM,GACnBA,EAAMC,iBACNP,EAASI,EACV,EAWK,WACE,SAACP,EAAD,CACEJ,KAAK,QACLe,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,GACZC,MAAOR,EACPS,SAjBO,SAAAP,GACfD,EAASC,EAAMQ,OAAOF,OACtBX,EAAY,IACZC,EAAa,GACd,KAeO,SAACH,EAAD,CAAQS,KAAK,SAAb,UACE,4CAILJ,IACC,SAACW,EAAA,QAAD,CAEIpC,OAAAA,MAMX,C","sources":["pages/Home.js","pages/Movies.styled.js","pages/Movies.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Home = ({ images, trendingImages }) => {\n  const renderImages = images || trendingImages || [];\n  const noDuplicate = renderImages.filter(\n    (el,\n    idx) => renderImages.indexOf(el) === idx\n  );\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {noDuplicate.length > 0 &&\n          noDuplicate.map(({ id, title, name }) => {\n            return (\n              <li key={id}>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: location }}\n                >\n                  {title || name}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n  trendingImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\nexport const Input = styled.input`\n  width: 300px;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  font-size: 20px;\n`;","import PropTypes from 'prop-types';\nimport Home from 'pages/Home';\nimport { useState } from 'react';\nimport { Input, Button } from './Movies.styled';\nconst Movies = ({ onSubmit, images, appSetInput, appSetImages }) => {\n  const [input, setInput] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(input);\n  };\n\n  const onChange = event => {\n    setInput(event.target.value);\n    appSetInput(''); // clear old search rendered response\n    appSetImages([]);\n  };\n\n  return (\n    <>\n      <header>\n        <form onSubmit={handleSubmit}>\n          <Input\n            name=\"input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"\"\n            value={input}\n            onChange={onChange}\n          />\n          <Button type=\"submit\">\n            <span>Search</span>\n          </Button>\n        </form>\n      </header>\n      {input && (\n        <Home\n          {...{\n            images,\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  appSetInput: PropTypes.func.isRequired,\n  appSetImages: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n"],"names":["images","trendingImages","renderImages","noDuplicate","filter","el","idx","indexOf","location","useLocation","length","map","id","title","name","to","state","from","Input","styled","Button","onSubmit","appSetInput","appSetImages","useState","input","setInput","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","Home"],"sourceRoot":""}